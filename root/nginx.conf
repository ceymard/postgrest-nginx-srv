
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;
    gzip_types application/xml application/octet-stream text/css application/json application/x-javascript;

    upstream postgrest {
      server localhost:3000;
      keepalive 64;
    }

    upstream srv {
      server localhost:3001;
      keepalive 64;
    }

    server {
        listen       80;
        #server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        ##### SW CONF !!!

        root /static;

        # Allow some really big files to be sent
        client_max_body_size 1024M;

        ## Serves file (matching pattern: /<size>/<MEDIA>/<file na-me><.ext>)
        location / {
            ## ?<name> assigns the capture to variable $name
            location ~* ^/(.*)$ {
            expires -1;
            ##add_header Pragma "no-cache";
            try_files /$1 $uri/index.html =404;
            }
        }

        ## backend service if no file in /static was found
        location /api/ {
            expires -1;
            ##add_header Pragma "no-cache";
            proxy_pass http://srv;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_buffers 4 32k;
            proxy_buffer_size 16k; 
            proxy_busy_buffers_size 32k;
        }

        location /pg/ {
          default_type  application/json;
          proxy_hide_header Content-Location;
          add_header Content-Location  /api/$upstream_http_content_location;
          proxy_set_header Authorization "Bearer $cookie_accesstoken";
          proxy_set_header  Connection "";
          proxy_http_version 1.1;
          proxy_pass http://postgrest/;
        }

        location /protected {
          internal;
          root /protected;
        }

    }

}
